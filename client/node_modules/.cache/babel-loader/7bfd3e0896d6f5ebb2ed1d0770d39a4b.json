{"ast":null,"code":"const parseFormattedAddress = require('./parseFormattedAddress');\n\nconst axios = require('axios');\n\nconst createLocation = async (props, coffeeShopData) => {\n  const itemizedAddress = parseFormattedAddress.parseFormattedAddress(props.coffeeShop.formatted_address);\n  return axios.post('/locations', {\n    \"formatted_address\": props.coffeeShop.formatted_address,\n    \"coffee_shop_id\": coffeeShopData.id,\n    \"place_id\": props.coffeeShop.place_id,\n    \"photo_reference\": props.coffeeShop.photos[0].photo_reference,\n    \"coordinates\": `${props.coffeeShop.geometry.location.lat},${props.coffeeShop.geometry.location.lng}`,\n    \"street_address\": itemizedAddress.street,\n    \"city\": itemizedAddress.city,\n    \"state\": itemizedAddress.state,\n    \"zip\": itemizedAddress.zip\n  }).then(res => {\n    return res.data;\n  });\n};\n\nmodule.exports = {\n  createLocation\n};","map":{"version":3,"sources":["/Users/travis/Developer/code/phase-5/phase-5-portfolio-project/phase-5-project/client/src/custom_modules/createLocation.js"],"names":["parseFormattedAddress","require","axios","createLocation","props","coffeeShopData","itemizedAddress","coffeeShop","formatted_address","post","id","place_id","photos","photo_reference","geometry","location","lat","lng","street","city","state","zip","then","res","data","module","exports"],"mappings":"AAAA,MAAMA,qBAAqB,GAAIC,OAAO,CAAC,yBAAD,CAAtC;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,OAAD,CAArB;;AAEA,MAAME,cAAc,GAAG,OAAOC,KAAP,EAAcC,cAAd,KAAiC;AAChD,QAAMC,eAAe,GAAGN,qBAAqB,CAACA,qBAAtB,CAA4CI,KAAK,CAACG,UAAN,CAAiBC,iBAA7D,CAAxB;AACA,SAAON,KAAK,CAACO,IAAN,CAAW,YAAX,EAAyB;AAC5B,yBAAqBL,KAAK,CAACG,UAAN,CAAiBC,iBADV;AAE5B,sBAAkBH,cAAc,CAACK,EAFL;AAG5B,gBAAYN,KAAK,CAACG,UAAN,CAAiBI,QAHD;AAI5B,uBAAmBP,KAAK,CAACG,UAAN,CAAiBK,MAAjB,CAAwB,CAAxB,EAA2BC,eAJlB;AAK5B,mBAAgB,GAAET,KAAK,CAACG,UAAN,CAAiBO,QAAjB,CAA0BC,QAA1B,CAAmCC,GAAI,IAAGZ,KAAK,CAACG,UAAN,CAAiBO,QAAjB,CAA0BC,QAA1B,CAAmCE,GAAI,EALvE;AAM5B,sBAAkBX,eAAe,CAACY,MANN;AAO5B,YAAQZ,eAAe,CAACa,IAPI;AAQ5B,aAASb,eAAe,CAACc,KARG;AAS5B,WAAOd,eAAe,CAACe;AATK,GAAzB,EAWJC,IAXI,CAWEC,GAAG,IAAI;AACZ,WAAOA,GAAG,CAACC,IAAX;AACH,GAbM,CAAP;AAcP,CAhBD;;AAkBAC,MAAM,CAACC,OAAP,GAAiB;AAAEvB,EAAAA;AAAF,CAAjB","sourcesContent":["const parseFormattedAddress =  require('./parseFormattedAddress')\nconst axios = require('axios')\n\nconst createLocation = async (props, coffeeShopData) => {\n        const itemizedAddress = parseFormattedAddress.parseFormattedAddress(props.coffeeShop.formatted_address)\n        return axios.post('/locations', {\n            \"formatted_address\": props.coffeeShop.formatted_address,\n            \"coffee_shop_id\": coffeeShopData.id,\n            \"place_id\": props.coffeeShop.place_id,\n            \"photo_reference\": props.coffeeShop.photos[0].photo_reference,\n            \"coordinates\": `${props.coffeeShop.geometry.location.lat},${props.coffeeShop.geometry.location.lng}`,\n            \"street_address\": itemizedAddress.street,\n            \"city\": itemizedAddress.city,\n            \"state\": itemizedAddress.state,\n            \"zip\": itemizedAddress.zip\n\n        }).then( res => {\n            return res.data\n        })\n}\n\nmodule.exports = { createLocation }"]},"metadata":{},"sourceType":"module"}