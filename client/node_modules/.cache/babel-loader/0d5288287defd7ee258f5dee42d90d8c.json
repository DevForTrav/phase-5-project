{"ast":null,"code":"const getUserLocation = async setUserLocation => {\n  // const displayLocationInfo =  position => {\n  //     const userLocation =  {\n  //         lng: position.coords.longitude,\n  //         lat: position.coords.latitude\n  //     }\n  //     // console.log(userLocation)\n  //     return userLocation\n  //     // setUserLocation(userLocation)\n  // }\n  if (navigator.geolocation) {\n    // console.log(navigator.geolocation.getCurrentPosition(displayLocationInfo))\n    return navigator.geolocation.getCurrentPosition(async pos => {\n      const userLocation = {\n        lat: pos.coords.latitude,\n        lng: pos.coords.longitude\n      }.then(await setUserLocation(userLocation));\n    });\n  }\n};\n\nmodule.exports = {\n  getUserLocation\n};","map":{"version":3,"sources":["/Users/travis/Developer/code/phase-5/phase-5-portfolio-project/phase-5-project/client/src/custom_modules/userLocation.js"],"names":["getUserLocation","setUserLocation","navigator","geolocation","getCurrentPosition","pos","userLocation","lat","coords","latitude","lng","longitude","then","module","exports"],"mappings":"AACA,MAAMA,eAAe,GAAI,MAAOC,eAAP,IAA2B;AAEhD;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEI,MAAIC,SAAS,CAACC,WAAd,EAA2B;AACvB;AACA,WAAOD,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAA0C,MAAOC,GAAP,IAAe;AAC5D,YAAMC,YAAY,GAAG;AACjBC,QAAAA,GAAG,EAAEF,GAAG,CAACG,MAAJ,CAAWC,QADC;AAEjBC,QAAAA,GAAG,EAAEL,GAAG,CAACG,MAAJ,CAAWG;AAFC,QAGnBC,IAHmB,CAIhB,MAAMX,eAAe,CAACK,YAAD,CAJL,CAArB;AAMH,KAPM,CAAP;AAQH;AACR,CAxBD;;AA0BAO,MAAM,CAACC,OAAP,GAAiB;AAAEd,EAAAA;AAAF,CAAjB","sourcesContent":["\nconst getUserLocation =  async (setUserLocation) => {\n    \n    // const displayLocationInfo =  position => {\n        \n    //     const userLocation =  {\n    //         lng: position.coords.longitude,\n    //         lat: position.coords.latitude\n    //     }\n    //     // console.log(userLocation)\n    //     return userLocation\n    //     // setUserLocation(userLocation)\n    // }\n\n        if (navigator.geolocation) {\n            // console.log(navigator.geolocation.getCurrentPosition(displayLocationInfo))\n            return navigator.geolocation.getCurrentPosition( async (pos) => {\n                const userLocation = {\n                    lat: pos.coords.latitude,\n                    lng: pos.coords.longitude\n                }.then(\n                     await setUserLocation(userLocation)\n                )\n            });    \n        }\n}\n\nmodule.exports = { getUserLocation }"]},"metadata":{},"sourceType":"module"}