{"ast":null,"code":"var _jsxFileName = \"/Users/travis/Developer/code/phase-5/phase-5-portfolio-project/phase-5-project/client/src/components/coffee_shops/RenderCoffeeShop.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport CoffeeShopCard from \"./CoffeeShopCard\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RenderCoffeeShop = props => {\n  _s();\n\n  const [coffeeShops, setCoffeeShops] = useState([]);\n  useEffect(() => {\n    const location = props.location;\n    axios.get(`/google_places?\n            city=${location.city}\n            &country_code=${location.country_code}\n            &country_name=${location.country_name}\n            &latitude=${location.latitude}\n            &longitude=${location.longitude}\n            &postal=${location.postal}\n            &state=${location.state}`).then(res => {\n      setCoffeeShops(res.data);\n    });\n  }, [props.location]);\n\n  const renderCoffeeShops = () => {\n    console.log(coffeeShops);\n    return coffeeShops.map((coffeeShop, idx) => {\n      return /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(CoffeeShopCard, {\n          coffeeShop: coffeeShop\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: renderCoffeeShops()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RenderCoffeeShop, \"hkGrSJQ0R9gkeLdA4yGgc4BGdTE=\");\n\n_c = RenderCoffeeShop;\nexport default RenderCoffeeShop;\n\nvar _c;\n\n$RefreshReg$(_c, \"RenderCoffeeShop\");","map":{"version":3,"sources":["/Users/travis/Developer/code/phase-5/phase-5-portfolio-project/phase-5-project/client/src/components/coffee_shops/RenderCoffeeShop.js"],"names":["axios","React","useEffect","useState","CoffeeShopCard","Row","Col","RenderCoffeeShop","props","coffeeShops","setCoffeeShops","location","get","city","country_code","country_name","latitude","longitude","postal","state","then","res","data","renderCoffeeShops","console","log","map","coffeeShop","idx"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAQC,GAAR,MAAiB,qBAAjB;AACA,OAAQC,GAAR,MAAiB,qBAAjB;;;AAIA,MAAMC,gBAAgB,GAAKC,KAAF,IAAa;AAAA;;AAClC,QAAM,CAAEC,WAAF,EAAeC,cAAf,IAAkCP,QAAQ,CAAC,EAAD,CAAhD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMS,QAAQ,GAAGH,KAAK,CAACG,QAAvB;AACAX,IAAAA,KAAK,CAACY,GAAN,CAAW;AACnB,mBAAmBD,QAAQ,CAACE,IAAK;AACjC,4BAA4BF,QAAQ,CAACG,YAAa;AAClD,4BAA4BH,QAAQ,CAACI,YAAa;AAClD,wBAAwBJ,QAAQ,CAACK,QAAS;AAC1C,yBAAyBL,QAAQ,CAACM,SAAU;AAC5C,sBAAsBN,QAAQ,CAACO,MAAO;AACtC,qBAAqBP,QAAQ,CAACQ,KAAM,EAP5B,EAQCC,IARD,CAQOC,GAAD,IAAS;AACXX,MAAAA,cAAc,CAACW,GAAG,CAACC,IAAL,CAAd;AACH,KAVD;AAWH,GAbQ,EAaN,CAACd,KAAK,CAACG,QAAP,CAbM,CAAT;;AAeA,QAAMY,iBAAiB,GAAG,MAAM;AAC5BC,IAAAA,OAAO,CAACC,GAAR,CAAYhB,WAAZ;AACA,WAAOA,WAAW,CAACiB,GAAZ,CAAgB,CAACC,UAAD,EAAaC,GAAb,KAAqB;AACxC,0BACI,QAAC,GAAD;AAAA,+BACI,QAAC,cAAD;AAA4B,UAAA,UAAU,EAAED;AAAxC,WAAuBC,GAAvB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAKH,KANM,CAAP;AAQH,GAVD;;AAcA,sBACI,QAAC,GAAD;AAAA,cACKL,iBAAiB;AADtB;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAtCD;;GAAMhB,gB;;KAAAA,gB;AAwCN,eAAeA,gBAAf","sourcesContent":["import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport CoffeeShopCard from \"./CoffeeShopCard\";\nimport  Row from \"react-bootstrap/Row\";\nimport  Col from \"react-bootstrap/Col\";\n\n\n\nconst RenderCoffeeShop = ( props ) => {\n    const [ coffeeShops, setCoffeeShops ] = useState([])\n    \n    useEffect(() => {\n        const location = props.location\n        axios.get(`/google_places?\n            city=${location.city}\n            &country_code=${location.country_code}\n            &country_name=${location.country_name}\n            &latitude=${location.latitude}\n            &longitude=${location.longitude}\n            &postal=${location.postal}\n            &state=${location.state}`)\n        .then((res) => {\n            setCoffeeShops(res.data)\n        })\n    }, [props.location])\n \n    const renderCoffeeShops = () => {\n        console.log(coffeeShops)\n        return coffeeShops.map((coffeeShop, idx) => {\n            return( \n                <Col >\n                    <CoffeeShopCard   key={idx} coffeeShop={coffeeShop} />\n                </Col>\n            )\n        })\n\n    };\n\n\n\n    return (\n        <Row>\n            {renderCoffeeShops()}\n        </Row>\n    )\n\n}\n\nexport default RenderCoffeeShop"]},"metadata":{},"sourceType":"module"}